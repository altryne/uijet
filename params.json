{"name":"UIjet","body":"[http://uijet.com](http://uijet.com)\r\n\r\n## Description\r\n\r\nUIjet provides the views layer for web applications via a separate sandbox.\r\nIt creates another layer of abstraction which allows you to create any UI widget you can think of\r\neasily.\r\n\r\n## Installation\r\n\r\nDownload the src folder and place in your project's static folder.\r\n\r\nImplement the following methods using your libraries of choice:\r\n\r\n* Custom events/Messaging\r\n    * publish\r\n    * subscribe\r\n    * unsubscribe\r\n\r\nAnd set the methods of the same name in the `methods` object of the configuration object you provide to `uijet.init`, like so:\r\n\r\n    uijet.init({\r\n        methods : {\r\n            publish     : publish,\r\n            subscribe   : subscribe,\r\n            unsubscribe : unsubscribe\r\n        }\r\n    });\r\n\r\nOptionally, if you are rendering templates on client-side in your app you can also implement the `generate` method by setting the `engine` option - here is an example using Mustache.js:\r\n\r\n    //...uijet.init...\r\n        engine  : function () {\r\n            return Mustache.to_html(this.template, this.data || this.context);\r\n        }\r\n\r\nAnother optional enhancement, if you need client-side routing in your app you can also implement the following:\r\n\r\n* URL router:\r\n    * setRoute\r\n    * unsetRoute\r\n    * runRoute\r\n\r\nInclude uijet.css in your document.\r\n\r\n### With AMD - using require.js\r\n\r\nInclude the require.js file at the bottom of your `<body>` tag.\r\n\r\n#### Suggested configuration\r\n\r\nAbove it, open a `<script>` tag and in it include your require object, like:\r\n\r\n    var require = {\r\n        baseUrl : '/static_path/js/',\r\n        deps    : ['jquery'],\r\n        paths   : {\r\n            jquery      : 'lib/jquery-1.7.1.min',\r\n            uijet_dir   : 'lib/uijet',\r\n            plugins     : 'lib'\r\n            // rest of needed paths ...\r\n        },\r\n        callback: function () {\r\n            require(['jquery', 'my_app'], function ($, myApp) {\r\n                myApp.init({\r\n                    widgets : [/*\r\n                        widgets declarations\r\n                    */]\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\nWhere the *must have* configurations are:\r\n\r\n* **baseUrl** - pointing to your base static folder.\r\n* **deps** - must include at least 'jquery'.\r\n* **paths** - you need to config the paths to *jquery*, *uijet_dir* - where your UIjet library is located - and \r\nthird party plugins, which are adapted into UIjet, need to be conigured under the *plugins* key.\r\n* **callback** - to make sure everything works correctly it's best to use this option and put you initialization\r\ncall in there.\r\n\r\n### Without AMD\r\n\r\nInclude jQuery>= 1.6 in your document.\r\nAfter jQuery include your libraries of choice for custom events/messaging and, if needed, templating.\r\nIf you also need routing include the router library.\r\nInclude uijet.js followed by widgets/Base.js and the rest of the widgets you need afterwards.\r\nIf you require any mixins (or if they're required by any of the widgets you're using) include them after the widgets.\r\nIf you require any adapters include those too after the mixins along with each library they adapt to.\r\n\r\n\r\n### Installation notes\r\n\r\nUIjet makes only one layer in the application and depends on other integral components\r\nthat should reside within the application:\r\n\r\n* Custom events/Messaging library\r\n* [optional] Template engine\r\n* [optional] URL router\r\n\r\nUIjet is currently based on jQuery, mostly for DOM manipulation, client-server communication and its Promises API.\r\n*There are plans to be either library agnostic or to have additional implementations which will not rely on jQuery.\r\n\r\n## Dependencies\r\n\r\n* jQuery>=1.6\r\n* Custom events library of choice\r\n* [optional] require.js\r\n* [optional] Template engine of choice\r\n* [optoinal] URL router of choice\r\n\r\n## Usage\r\n\r\n### Application startup\r\n\r\n    var MyApp = (function () {\r\n        // ...application code...\r\n        \r\n        // UIjet initialization\r\n        uijet.init({\r\n            methods : {\r\n                // mandatory\r\n                publish     : someEventsLib.publish,\r\n                subscribe   : someEventsLib.subscribe,\r\n                unsubscribte: someEventsLib.unsubscribe,\r\n                // if using routes\r\n                runRoute    : someRouter.runRoute,\r\n                setRoute    : someRouter.setRoute,\r\n                unsetRoute  : someRouter.unsetRoute\r\n            },\r\n            // if using templates\r\n            engine  : function () {\r\n                return someTemplateEnginge.render(this.template, this.data || this.context);\r\n            }\r\n            //...more options...\r\n        });\r\n    }());\r\n\r\n### Widget instances definition\r\n\r\n    uijet.init({\r\n        templates_path  : '/path/to/templates/',\r\n        widgets         : [{\r\n            type    : 'View',\r\n            config  : {\r\n                element : '#my_first_view',\r\n                route   : '#/home/'\r\n            }\r\n        }, {\r\n            type    : 'Pane',\r\n            config  : {\r\n                element : '#home_content_pane',\r\n                mixins  : ['Templated'],\r\n                data_url: '/home_content/',\r\n                position: 'center',\r\n                style   : {\r\n                    padding : '3%'\r\n                }\r\n            }\r\n        }, {\r\n            type    : 'Pane',\r\n            config  : {\r\n                element         : '#alert_pane',\r\n                mixins          : ['Templated', 'Transitioned'],\r\n                position        : 'center',\r\n                animation_type  : 'appear',\r\n                insert_before   : '#alert_close',\r\n                signals         : {\r\n                    post_disappear  : function () {\r\n                        this.publish('close');\r\n                    }\r\n                },\r\n                app_events      : {\r\n                    'alert_close.clicked'   : function () {\r\n                        this.sleep();\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            type    : 'Button',\r\n            config  : {\r\n                element : '#alert_close'\r\n            }\r\n        }]\r\n    });\r\n\r\n## Author\r\n\r\nYehonatan Daniv\r\n\r\n## Special thanks\r\n\r\nVenvid Technologies","tagline":"Killer UI for web-apps.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}